@page "/servers/add"

@inject NavigationManager NavigationManager

<h3>Add Server</h3>

<EditForm Model="server" FormName="addServerForm" OnValidSubmit="Submit">

		<DataAnnotationsValidator></DataAnnotationsValidator>
		<ValidationSummary></ValidationSummary>

		<div class="row mb-3">
			<div class="col-2">
				<label class="col-form-label">Name</label>
			</div>
			<div class="col-6">
				<InputText @bind-Value=server.Name class="form-control"></InputText>
			</div>
			<div class="col">
				<ValidationMessage For="() => server.Name"></ValidationMessage>
			</div>
		</div>
		
		<div class="row mb-3">
			<div class="col-2">
				<label class="col-form-label">City</label>
			</div>
			<div class="col-6">
				<InputText @bind-Value=server.City class="form-control"></InputText>
			</div>
			<div class="col">
				<ValidationMessage For="() => server.City"></ValidationMessage>
			</div>
		</div>
		<div class="row mb-3">
			<div class="col-2">
				<label class="col-form-label">Online</label>
			</div>
			<div class="col-6">
				<InputCheckbox @bind-Value=server.IsOnline class="form-check-input"></InputCheckbox>
			</div>
		</div>
		<br />
		<button class="btn btn-primary" type="submit">Save</button>
		&nbsp;
		<a href="/servers" class="btn btn-danger">Close</a>
	</EditForm>

@code {
	[SupplyParameterFromForm(FormName = "addServerForm")]
	private Server? server { get; set; } = new Server(){IsOnline = false};

	public async Task Submit()
	{
		if(server != null)
		{
			ServerRepository.AddServer(server);
			await Task.Delay(100);
			NavigationManager.NavigateTo("/servers");
		}
	}
}
