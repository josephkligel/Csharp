@page "/quickgrid"
@using Microsoft.AspNetCore.Components.QuickGrid

@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<h3>Quickgrid Demo</h3>
<br />
@if (servers != null)
{
	<QuickGrid Items="servers.AsQueryable()" Pagination="paginationState">
		<PropertyColumn Property="s => s.Name" Sortable="true"/>
		<PropertyColumn Property="s => s.City" Sortable="true"/>
		<TemplateColumn Title="Status" Sortable="true" SortBy="GridSort<Server>.ByAscending(s => s.IsOnline)">
			@if(context.IsOnline){
				<div style="color: green">
					Online
				</div>
			}
			else
			{
				<div style="color: red">
					Offline
				</div>
			}
		</TemplateColumn>
		<TemplateColumn>
			@if(context.IsOnline){
				Random random = new Random();
				int randomNumber = random.Next(0, 500);
				<text>@randomNumber</text>
			}
			else
			{
				<text>N/A</text>
			}
		</TemplateColumn>
		<TemplateColumn>
			@if (context.IsOnline)
			{
				<button type="button"
						class="btn btn-outline-danger"
						@onclick="@(() => {context.IsOnline = false;})">
					Turn Off
				</button>
			}
			else
			{
				<button type="button"
						class="btn btn-outline-success"
						@onclick="@(() => {context.IsOnline = true;})">
					Turn On
				</button>
			}
		</TemplateColumn>
		<TemplateColumn>
			<a href="/servers/@context.ServerId" class="btn btn-outline-primary">Edit</a>
		</TemplateColumn>
		<TemplateColumn>
			<ChildContent Context="server">
				<EditForm Model="server"
						  FormName="@($"form-name-{server.ServerId}")"
						  OnValidSubmit="@(async () => {await DeleteServer(server.ServerId);})">
					<button type="submit" class="btn btn-primary">Delete</button>
				</EditForm>
			</ChildContent>
		</TemplateColumn>
	</QuickGrid>
	<Paginator State="paginationState"></Paginator>
}

@code {
	private List<Server> servers = ServerRepository.GetServers();

	private PaginationState paginationState = new PaginationState() {
			ItemsPerPage = 5,
	};

	public async Task DeleteServer(int ServerId)
	{
		if (ServerId > 0)
		{
			ServerRepository.DeleteServer(ServerId);
			await Task.Delay(100);
			NavigationManager.NavigateTo("/Servers", true);
		}
	}
}
