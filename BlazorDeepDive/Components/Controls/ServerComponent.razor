@inject NavigationManager NavigationManager

@if(Server != null)
{

    <li @key="Server.ServerId">
        @Server.Name in @Server.City is
        <span style="color:@(Server.IsOnline ? "green" : "red")">
            @(Server.IsOnline ? "online" : "offline")
        </span>
        <a href="Servers/edit/@Server.ServerId">Edit</a>
        <EditForm Model="Server"
                  FormName="@($"form-name-{Server.ServerId}")"
                  OnValidSubmit="@(() => {DeleteServer(Server.ServerId);})">
            <button type="submit" class="btn btn-primary">Delete</button>
        </EditForm>
    </li>
}


@code {
    [Parameter]
    public Server? Server { get; set; }

    public void ChangeStatus()
    {
        if(Server != null)
            this.Server.IsOnline = !this.Server.IsOnline;
    }

    public async Task DeleteServer(int ServerId)
    {
        if (ServerId > 0)
        {
            ServerRepository.DeleteServer(ServerId);
            await Task.Delay(100);
            NavigationManager.NavigateTo("/Servers", true);
        }
    }
}
